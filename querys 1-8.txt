- 1. What is the total amount each customer spent at the restaurant?

select s.customer_id, sum(m.price)
from dannys_diner.sales s
join dannys_diner.menu m
on s.product_id=m.product_id
group by s.customer_id
order by s.customer_id

 2. How many days has each customer visited the restaurant?

select customer_id,count(order_date)
from dannys_diner.sales
group by customer_id
order by customer_id

 3. What was the first item from the menu purchased by each customer?
with mani as(
  select s.customer_id,m.product_name,
row_number() over (partition by s.customer_id order by s.order_date)  as  rn
from
dannys_diner.sales s
join dannys_diner.menu m
 on s.product_id=m.product_id
 order by s.customer_id)
 
 select * from mani

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

select m.product_name,count(*)
from dannys_diner.sales s
join dannys_diner.menu m
on
s.product_id=m.product_id
group by m.product_name
order by count(*) desc
limit 1

-- 5. Which item was the most popular for each customer?
WITH item_popularity AS (
    SELECT 
        s.customer_id,
        m.product_name,
        COUNT(*) as order_count,
        ROW_NUMBER() OVER(PARTITION BY s.customer_id ORDER BY COUNT(*) DESC) AS rn
    FROM 
        dannys_diner.sales s
    JOIN 
        dannys_diner.menu m
    ON 
        s.product_id = m.product_id
    GROUP BY 
        s.customer_id, m.product_name
)
SELECT 
    customer_id,
    product_name,
    order_count
FROM 
    item_popularity
WHERE 
    rn = 1;

-- 6. Which item was purchased first by the customer after they became a member?
with Mani as(
  
  select s.customer_id,m.product_name,me.join_date,s.order_date,
row_number() over (partition by s.customer_id order by s.order_date)  as mani
from dannys_diner.sales s
join dannys_diner.menu m
on s.product_id =m.product_id
join  dannys_diner.members me
on s.customer_id=me.customer_id
where s.order_date > me.join_date
  )
  select customer_id, product_name 
  from Mani
  where mani =1

-- 7. Which item was purchased just before the customer became a member?
with Mani as(
  
with Mani as(
  
  select s.customer_id,m.product_name,me.join_date,s.order_date,
row_number() over (partition by s.customer_id order by s.order_date)  as mani
from dannys_diner.sales s
join dannys_diner.menu m
on s.product_id =m.product_id
join  dannys_diner.members me
on s.customer_id=me.customer_id
where s.order_date <= me.join_date
  )
  select customer_id, product_name 
  from Mani
  where mani =1


-- 8. What is the total items and amount spent for each member before they became a member?

select s.customer_id,count(m.product_name),sum(m.price)
from
dannys_diner.sales s
join dannys_diner.menu m
on s.product_id=m.product_id
join dannys_diner.members me
on s.customer_id=me.customer_id

where s.order_date < me.join_date
group by s.customer_id
order by s.customer_id
  

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?


with mani as(
 select s.customer_id,
case 
    when m.product_name='sushi' then m.price*10*2
    else m.price*10
end as uvan
from dannys_diner.sales s
join dannys_diner.menu m
on s.product_id = m.product_id
order by s.customer_id
)

select  customer_id ,sum(uvan)
from mani
group by customer_id
order by customer_id











